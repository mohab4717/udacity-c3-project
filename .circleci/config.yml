version: 2.1

orbs:
  slack: circleci/slack@4.9.3

commands: 
    notify_on_failure:
      steps:
       - slack/notify:
          event: fail
          channel: deployment-application
          template: basic_fail_1
jobs:
  notify_on_sucess:
   docker:
     - image: cimg/base:stable
   steps:
     - slack/notify: 
         event: pass
         channel: deployment-application
         template: success_tagged_deployment_1  
  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-deps]
      - run:
          name: Build front-end
          command: |
            # Your code here
            cd frontend
            npm install
            npm run build 
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-deps
      - notify_on_failure

  build-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-deps]
      - run:
          name: Back-end build
          command: |
            # Your code here
            cd backend
            npm install
            npm run build 
      - save_cache:
          paths: [backend/node_modules]
          key: backend-deps
      - notify_on_failure

  test-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
     - checkout
     - restore_cache:
          keys: [frontend-deps]
     - run:
          name: front-end test
          command: |
            # Your code here
            cd frontend
            npm install
            npm run test      
     - notify_on_failure          
  test-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-deps]
      - run:
          name: Back-end test
          command: |
            # Your code here
            cd backend
            npm install
            npm run test
      - notify_on_failure      

  scan-frontend:
     docker:
      - image: circleci/node:13.8.0
     steps:
      - checkout
      - restore_cache:
          keys: [frontend-deps]
      - run:
          name: front-end scan
          command: |
            # Your code here
            cd frontend
            npm install
            npm audit fix --audit-level=critical --force
            npm audit --audit-level=critical
      - notify_on_failure

  scan-backend:
     docker:
      - image: circleci/node:13.8.0
     steps:
      - checkout
      - restore_cache:
          keys: [backend-deps]
      - run:
          name: back-end scan
          command: |
            # Your code here
            cd backend
            npm install
            npm audit fix --audit-level=critical --force
            npm audit fix --audit-level=critical --force
            npm audit --audit-level=critical
      - notify_on_failure
workflows:
  default:
     jobs:
       - build-frontend
       - build-backend
       - test-frontend:
          requires: [build-frontend]
       - test-backend:
          requires: [build-backend]
       - scan-backend:
          requires: [build-backend]
       - scan-frontend:
          requires: [build-frontend]   
       - notify_on_sucess:
          requires:
           - test-frontend
           - test-backend
           - scan-frontend
           - scan-backend   